<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jalen.tts.dao.TrainSeatMapper">
  <resultMap id="BaseResultMap" type="com.jalen.tts.bean.TrainSeat">
    <id column="ID" jdbcType="DECIMAL" property="id" />
    <result column="TRAIN_ID" jdbcType="DECIMAL" property="trainId" />
    <result column="SEAT_ID" jdbcType="DECIMAL" property="seatId" />
    <result column="CARRIAGE" jdbcType="DECIMAL" property="carriage" />
    <result column="SEAT_TYPE" jdbcType="VARCHAR" property="seatType" />
    <result column="SEAT_LOCATION" jdbcType="VARCHAR" property="seatLocation" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, TRAIN_ID, SEAT_ID, CARRIAGE, SEAT_TYPE, SEAT_LOCATION
  </sql>
  <select id="selectByExample" parameterType="com.jalen.tts.bean.TrainSeatExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from TRAIN_SEAT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.math.BigDecimal" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from TRAIN_SEAT
    where ID = #{id,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.math.BigDecimal">
    delete from TRAIN_SEAT
    where ID = #{id,jdbcType=DECIMAL}
  </delete>
  <delete id="deleteByExample" parameterType="com.jalen.tts.bean.TrainSeatExample">
    delete from TRAIN_SEAT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jalen.tts.bean.TrainSeat">
    insert into TRAIN_SEAT (ID, TRAIN_ID, SEAT_ID, 
      CARRIAGE, SEAT_TYPE, SEAT_LOCATION
      )
    values (#{id,jdbcType=DECIMAL}, #{trainId,jdbcType=DECIMAL}, #{seatId,jdbcType=DECIMAL}, 
      #{carriage,jdbcType=DECIMAL}, #{seatType,jdbcType=VARCHAR}, #{seatLocation,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jalen.tts.bean.TrainSeat">
    insert into TRAIN_SEAT
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="trainId != null">
        TRAIN_ID,
      </if>
      <if test="seatId != null">
        SEAT_ID,
      </if>
      <if test="carriage != null">
        CARRIAGE,
      </if>
      <if test="seatType != null">
        SEAT_TYPE,
      </if>
      <if test="seatLocation != null">
        SEAT_LOCATION,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=DECIMAL},
      </if>
      <if test="trainId != null">
        #{trainId,jdbcType=DECIMAL},
      </if>
      <if test="seatId != null">
        #{seatId,jdbcType=DECIMAL},
      </if>
      <if test="carriage != null">
        #{carriage,jdbcType=DECIMAL},
      </if>
      <if test="seatType != null">
        #{seatType,jdbcType=VARCHAR},
      </if>
      <if test="seatLocation != null">
        #{seatLocation,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jalen.tts.bean.TrainSeatExample" resultType="java.lang.Long">
    select count(*) from TRAIN_SEAT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update TRAIN_SEAT
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=DECIMAL},
      </if>
      <if test="record.trainId != null">
        TRAIN_ID = #{record.trainId,jdbcType=DECIMAL},
      </if>
      <if test="record.seatId != null">
        SEAT_ID = #{record.seatId,jdbcType=DECIMAL},
      </if>
      <if test="record.carriage != null">
        CARRIAGE = #{record.carriage,jdbcType=DECIMAL},
      </if>
      <if test="record.seatType != null">
        SEAT_TYPE = #{record.seatType,jdbcType=VARCHAR},
      </if>
      <if test="record.seatLocation != null">
        SEAT_LOCATION = #{record.seatLocation,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update TRAIN_SEAT
    set ID = #{record.id,jdbcType=DECIMAL},
      TRAIN_ID = #{record.trainId,jdbcType=DECIMAL},
      SEAT_ID = #{record.seatId,jdbcType=DECIMAL},
      CARRIAGE = #{record.carriage,jdbcType=DECIMAL},
      SEAT_TYPE = #{record.seatType,jdbcType=VARCHAR},
      SEAT_LOCATION = #{record.seatLocation,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jalen.tts.bean.TrainSeat">
    update TRAIN_SEAT
    <set>
      <if test="trainId != null">
        TRAIN_ID = #{trainId,jdbcType=DECIMAL},
      </if>
      <if test="seatId != null">
        SEAT_ID = #{seatId,jdbcType=DECIMAL},
      </if>
      <if test="carriage != null">
        CARRIAGE = #{carriage,jdbcType=DECIMAL},
      </if>
      <if test="seatType != null">
        SEAT_TYPE = #{seatType,jdbcType=VARCHAR},
      </if>
      <if test="seatLocation != null">
        SEAT_LOCATION = #{seatLocation,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jalen.tts.bean.TrainSeat">
    update TRAIN_SEAT
    set TRAIN_ID = #{trainId,jdbcType=DECIMAL},
      SEAT_ID = #{seatId,jdbcType=DECIMAL},
      CARRIAGE = #{carriage,jdbcType=DECIMAL},
      SEAT_TYPE = #{seatType,jdbcType=VARCHAR},
      SEAT_LOCATION = #{seatLocation,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=DECIMAL}
  </update>
  <select id="selectTrainSeatDetail" parameterType="BigDecimal" resultMap="BaseResultMap">
  	select t.id, t.train_id, t.seat_id, t.carriage, t.seat_type, t.seat_location
	from SELECT_RESULTS s, TRAIN_SEAT t
	where t.train_id = #{trainId, jdbcType=DECIMAL} and t.train_id = s.train_id
  </select>
</mapper>