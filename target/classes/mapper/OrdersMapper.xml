<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jalen.tts.dao.OrdersMapper">
  <resultMap id="BaseResultMap" type="com.jalen.tts.bean.Orders">
    <id column="ID" jdbcType="DECIMAL" property="id" />
    <result column="USER_ID" jdbcType="DECIMAL" property="userId" />
    <result column="TRAIN_ID" jdbcType="DECIMAL" property="trainId" />
    <result column="SEAT_ID" jdbcType="DECIMAL" property="seatId" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="PRICE" jdbcType="DECIMAL" property="price" />
    <result column="START_STATION" jdbcType="VARCHAR" property="startStation" />
    <result column="ARRIVE_STATION" jdbcType="VARCHAR" property="arriveStation" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, USER_ID, TRAIN_ID, SEAT_ID, CREATE_TIME, PRICE, START_STATION, ARRIVE_STATION
  </sql>
  <select id="selectByExample" parameterType="com.jalen.tts.bean.OrdersExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ORDERS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.math.BigDecimal" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ORDERS
    where ID = #{id,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.math.BigDecimal">
    delete from ORDERS
    where ID = #{id,jdbcType=DECIMAL}
  </delete>
  <delete id="deleteByExample" parameterType="com.jalen.tts.bean.OrdersExample">
    delete from ORDERS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jalen.tts.bean.Orders">
    insert into ORDERS (USER_ID, TRAIN_ID, 
      SEAT_ID, PRICE, 
      START_STATION, ARRIVE_STATION)
    values (#{userId,jdbcType=DECIMAL}, #{trainId,jdbcType=DECIMAL}, 
      #{seatId,jdbcType=DECIMAL}, #{price,jdbcType=DECIMAL}, 
      #{startStation,jdbcType=VARCHAR}, #{arriveStation,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jalen.tts.bean.Orders">
    insert into ORDERS
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="trainId != null">
        TRAIN_ID,
      </if>
      <if test="seatId != null">
        SEAT_ID,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="price != null">
        PRICE,
      </if>
      <if test="startStation != null">
        START_STATION,
      </if>
      <if test="arriveStation != null">
        ARRIVE_STATION,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=DECIMAL},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=DECIMAL},
      </if>
      <if test="trainId != null">
        #{trainId,jdbcType=DECIMAL},
      </if>
      <if test="seatId != null">
        #{seatId,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="startStation != null">
        #{startStation,jdbcType=VARCHAR},
      </if>
      <if test="arriveStation != null">
        #{arriveStation,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jalen.tts.bean.OrdersExample" resultType="java.lang.Long">
    select count(*) from ORDERS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ORDERS
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=DECIMAL},
      </if>
      <if test="record.userId != null">
        USER_ID = #{record.userId,jdbcType=DECIMAL},
      </if>
      <if test="record.trainId != null">
        TRAIN_ID = #{record.trainId,jdbcType=DECIMAL},
      </if>
      <if test="record.seatId != null">
        SEAT_ID = #{record.seatId,jdbcType=DECIMAL},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.price != null">
        PRICE = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.startStation != null">
        START_STATION = #{record.startStation,jdbcType=VARCHAR},
      </if>
      <if test="record.arriveStation != null">
        ARRIVE_STATION = #{record.arriveStation,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ORDERS
    set ID = #{record.id,jdbcType=DECIMAL},
      USER_ID = #{record.userId,jdbcType=DECIMAL},
      TRAIN_ID = #{record.trainId,jdbcType=DECIMAL},
      SEAT_ID = #{record.seatId,jdbcType=DECIMAL},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      PRICE = #{record.price,jdbcType=DECIMAL},
      START_STATION = #{record.startStation,jdbcType=VARCHAR},
      ARRIVE_STATION = #{record.arriveStation,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jalen.tts.bean.Orders">
    update ORDERS
    <set>
      <if test="userId != null">
        USER_ID = #{userId,jdbcType=DECIMAL},
      </if>
      <if test="trainId != null">
        TRAIN_ID = #{trainId,jdbcType=DECIMAL},
      </if>
      <if test="seatId != null">
        SEAT_ID = #{seatId,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="price != null">
        PRICE = #{price,jdbcType=DECIMAL},
      </if>
      <if test="startStation != null">
        START_STATION = #{startStation,jdbcType=VARCHAR},
      </if>
      <if test="arriveStation != null">
        ARRIVE_STATION = #{arriveStation,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jalen.tts.bean.Orders">
    update ORDERS
    set USER_ID = #{userId,jdbcType=DECIMAL},
      TRAIN_ID = #{trainId,jdbcType=DECIMAL},
      SEAT_ID = #{seatId,jdbcType=DECIMAL},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      PRICE = #{price,jdbcType=DECIMAL},
      START_STATION = #{startStation,jdbcType=VARCHAR},
      ARRIVE_STATION = #{arriveStation,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=DECIMAL}
  </update>
  <select id="getCountByMonth" parameterType="String" resultType="java.lang.Integer">
  	SELECT count(*)
	from ORDERS
	WHERE to_number(to_char(CREATE_TIME,'MM')) = #{month,jdbcType=VARCHAR}
  </select>
  <select id="getOrdersCount" resultType="java.lang.Integer">
	SELECT count(*)
	FROM ORDERS
  </select>
</mapper>